version: '3.8'

services:
  traefik:
    image: traefik:v3.4
    container_name: traefik
    ports:
      - "80:80"     # HTTP
      - "8080:8080" # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./api-gateway/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./api-gateway/dynamic:/etc/traefik/dynamic:ro
    networks:
      - microservices_network
    restart: unless-stopped

  orders-service:
    build: ./orders-service
    container_name: orders-service
    networks:
      - microservices_network
    depends_on:
      - orders-db
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.orders.loadbalancer.server.port=8000"
    restart: unless-stopped
  
  orders-db:
    image: postgres:15-alpine
    container_name: orders-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=orders_db
    volumes:
      - orders_db_data:/var/lib/postgresql/data
    networks:
      - microservices_network
    restart: unless-stopped
  
  payments-service:
    build: ./payments-service
    container_name: payments-service
    networks:
      - microservices_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.payments.loadbalancer.server.port=8001"
    restart: unless-stopped

networks:
  microservices_network:
    driver: bridge

volumes:
  orders_db_data:
