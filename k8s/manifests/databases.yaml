apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: orders-db
  namespace: microservices
spec:
  serviceName: "orders-db"
  replicas: 1
  selector:
    matchLabels:
      app: orders-db
  template:
    metadata:
      labels:
        app: orders-db
    spec:
      containers:
      - name: orders-db
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: POSTGRES_DB
          value: orders_db
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "postgres", "-d", "orders_db"]
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 2
          failureThreshold: 5
        volumeMounts:
        - name: orders-db-data
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: orders-db-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "standard"
      resources:
        requests:
          storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: payments-db
  namespace: microservices
spec:
  serviceName: "payments-db"
  replicas: 1
  selector:
    matchLabels:
      app: payments-db
  template:
    metadata:
      labels:
        app: payments-db
    spec:
      containers:
      - name: payments-db
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: postgres
        - name: POSTGRES_DB
          value: payments_db
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "postgres", "-d", "payments_db"]
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 2
          failureThreshold: 5
        volumeMounts:
        - name: payments-db-data
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: payments-db-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "standard"
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: orders-db
  namespace: microservices
spec:
  ports:
  - port: 5432
  selector:
    app: orders-db
  clusterIP: None
---
apiVersion: v1
kind: Service
metadata:
  name: payments-db
  namespace: microservices
spec:
  ports:
  - port: 5432
  selector:
    app: payments-db
  clusterIP: None 