// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"payments-service/internal/infrastructure/config"
	"payments-service/internal/interfaces/api/router"
)

// Injectors from wire.go:

func InitializeApplication() (*Application, error) {
	routerRouter := router.NewRouter()
	app := NewConfigApp()
	configConfig := config.MustLoad(app)
	application := NewApplication(routerRouter, configConfig)
	return application, nil
}

// wire.go:

func NewConfigApp() *config.App {
	return config.NewApp("config/config.yaml")
}

type Application struct {
	Router *router.Router
	Config *config.Config
}

func NewApplication(router2 *router.Router, config2 *config.Config) *Application {
	return &Application{
		Router: router2,
		Config: config2,
	}
}
